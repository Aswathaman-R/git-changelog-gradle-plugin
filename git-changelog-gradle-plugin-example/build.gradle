apply plugin: 'java'

buildscript {
 repositories {
  mavenLocal()
  mavenCentral()
 }

 dependencies {
  classpath "se.bjurr.gitchangelog:git-changelog-gradle-plugin:1.13-SNAPSHOT"
 }
}

apply plugin: 'se.bjurr.gitchangelog.git-changelog-gradle-plugin'

//
// Minimal config
//
task generateGitChangelogMinimal(type: se.bjurr.gitchangelog.plugin.gradle.GitChangelogTask) {
 filePath = "CHANGELOG_minimal.md";
}

//
// MediaWiki page
//
//task generateGitChangelogMediaWiki(type: se.bjurr.gitchangelog.plugin.gradle.GitChangelogTask) {
// settingsFile = "changelog.json";
// mediaWikiUrl = "http://localhost/mediawiki/";
// mediaWikiTitle = "Tomas Title";
// mediaWikiUsername = "tomas";
// mediaWikiPassword = "tomaskod";
//}

//
// Template configured inline
//
task generateGitChangelogInlineTemplate(type: se.bjurr.gitchangelog.plugin.gradle.GitChangelogTask) {
 settingsFile = "changelog.json";
 filePath = "CHANGELOG_inline.md";
 templateContent = """
# Git Changelog Maven plugin changelog

Changelog of Git Changelog Maven plugin.

{{#tags}}
## {{name}}
 {{#issues}}
  {{#hasLink}}
### {{name}} [{{issue}}]({{link}}) {{title}}
  {{/hasLink}}
  {{^hasLink}}
### {{name}}
  {{/hasLink}}

  {{#commits}}
[{{hash}}](https://github.com/tomasbjerre/git-changelog-maven-plugin/commit/{{hash}}) {{authorName}} *{{commitTime}}*

{{{message}}}

  {{/commits}}

 {{/issues}}
{{/tags}}
 """;
}

//
// Template from file
//
task generateGitChangelogTemplateFromFile(type: se.bjurr.gitchangelog.plugin.gradle.GitChangelogTask) {
 settingsFile = "changelog.json";
 filePath = "CHANGELOG.md";
 templateContent = new File('changelog.mustache').getText('UTF-8');
}

//
// Set reference to create changelog for version 1.1
//
task generateGitChangelog11(type: se.bjurr.gitchangelog.plugin.gradle.GitChangelogTask) {
 settingsFile = "changelog.json";
 filePath = "CHANGELOG_1_1.md";
 toRef = "1.1";
}

//
// Set references to create releasenotes for version 1.1
//
task generateGitReleasenotes11(type: se.bjurr.gitchangelog.plugin.gradle.GitChangelogTask) {
 settingsFile = "changelog.json";
 filePath = "CHANGELOG_1_0_1_1.md";
 fromRef = "1.0";
 toRef = "1.1";
}

//
// Set commits to view changes between them. You may use properties
// for the from and to commit to inject hashes from command line.
//
task generateGitChangelogCommits(type: se.bjurr.gitchangelog.plugin.gradle.GitChangelogTask) {
 settingsFile = "changelog.json";
 filePath = "CHANGELOG_commits.md";
 fromCommit = "d5657ba4353bff4c8924981d4da4aacfcbd9bd54";
 toCommit = "3568f412a65a16d1848d8d5316a7cb30261cf271";
}

//
// Mixed features
//
task generateGitChangelogMixed(type: se.bjurr.gitchangelog.plugin.gradle.GitChangelogTask) {
 readableTagName = ".*/([^/]*)";
 dateFormat = "HH:mm:ss";
 timeZone = "UTC";
 removeIssueFromMessage = false;
 ignoreCommitsIfMessageMatches = ".*Gradle.*";
 untaggedName = "These commits are not included in any tag";
 noIssueName = "These commits have not issue in their commit comment";
 filePath = "CHANGELOG_mixed.md";
 templateContent = """
# Git Changelog Maven plugin changelog

Changelog of Git Changelog Maven plugin.

{{#tags}}
## {{name}}
 {{#issues}}
### {{name}}
  {{#commits}}
   {{{message}}} *{{commitTime}}*

  {{/commits}}

 {{/issues}}

{{/tags}}
 """;
}


task generateChangelogs << {
}

generateChangelogs.dependsOn {
  tasks.findAll { task -> task.name.startsWith('generateGit') }
}

sourceSets {
 main.java.srcDirs = ['src/main/java']
}
