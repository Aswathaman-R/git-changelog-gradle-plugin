apply plugin: 'java'

buildscript {
 repositories {
  mavenLocal()
  mavenCentral()
 }

 dependencies {
  classpath "se.bjurr.gitchangelog:git-changelog-gradle-plugin:1.11-SNAPSHOT"
 }
}

apply plugin: 'se.bjurr.gitchangelog.git-changelog-gradle-plugin'

//
// Minimal config
//
task generateGitChangelogMinimal(type: se.bjurr.gitchangelog.plugin.gradle.GitChangelogTask) {
 gitChangelogPlugin.filePath = "CHANGELOG_minimal.md";
}

//
// MediaWiki page
//
//task generateGitChangelogMediaWiki(type: se.bjurr.gitchangelog.plugin.gradle.GitChangelogTask) {
// gitChangelogPlugin.settingsFile = "changelog.json";
// gitChangelogPlugin.mediaWikiUrl = "http://localhost/mediawiki/";
// gitChangelogPlugin.mediaWikiTitle = "Tomas Title";
// gitChangelogPlugin.mediaWikiUsername = "tomas";
// gitChangelogPlugin.mediaWikiPassword = "tomaskod";
//}

//
// Template configured inline
//
task generateGitChangelogInlineTemplate(type: se.bjurr.gitchangelog.plugin.gradle.GitChangelogTask) {
 gitChangelogPlugin.settingsFile = "changelog.json";
 gitChangelogPlugin.filePath = "CHANGELOG_inline.md";
 gitChangelogPlugin.templateContent = """
# Git Changelog Maven plugin changelog

Changelog of Git Changelog Maven plugin.

{{#tags}}
## {{name}}
 {{#issues}}
  {{#hasLink}}
### {{name}} [{{issue}}]({{link}}) {{title}}
  {{/hasLink}}
  {{^hasLink}}
### {{name}}
  {{/hasLink}}

  {{#commits}}
[{{hash}}](https://github.com/tomasbjerre/git-changelog-maven-plugin/commit/{{hash}}) {{authorName}} *{{commitTime}}*

{{{message}}}

  {{/commits}}

 {{/issues}}
{{/tags}}
 """;
}

//
// Template from file
//
task generateGitChangelogTemplateFromFile(type: se.bjurr.gitchangelog.plugin.gradle.GitChangelogTask) {
 gitChangelogPlugin.settingsFile = "changelog.json";
 gitChangelogPlugin.filePath = "CHANGELOG.md";
 gitChangelogPlugin.templateContent = new File('changelog.mustache').getText('UTF-8');
}

//
// Set reference to create changelog for version 1.1
//
task generateGitChangelog11(type: se.bjurr.gitchangelog.plugin.gradle.GitChangelogTask) {
 gitChangelogPlugin.settingsFile = "changelog.json";
 gitChangelogPlugin.filePath = "CHANGELOG_1_1.md";
 gitChangelogPlugin.toRef = "git-changelog-maven-plugin-1.1";
}

//
// Set references to create releasenotes for version 1.1
//
task generateGitReleasenotes11(type: se.bjurr.gitchangelog.plugin.gradle.GitChangelogTask) {
 gitChangelogPlugin.settingsFile = "changelog.json";
 gitChangelogPlugin.filePath = "CHANGELOG_1_0_1_1.md";
 gitChangelogPlugin.fromRef = "1.0";
 gitChangelogPlugin.toRef = "1.1";
}

//
// Set commits to view changes between them. You may use properties
// for the from and to commit to inject hashes from command line.
//
task generateGitChangelogCommits(type: se.bjurr.gitchangelog.plugin.gradle.GitChangelogTask) {
 gitChangelogPlugin.settingsFile = "changelog.json";
 gitChangelogPlugin.filePath = "CHANGELOG_commits.md";
 gitChangelogPlugin.fromCommit = "76a4dfe893665af43bf0aa0e3af49dab8406da89";
 gitChangelogPlugin.toCommit = "0003d77bf175973d2d9bf13be41dd7abe2892214";
}

//
// Mixed features
//
task generateGitChangelogMixed(type: se.bjurr.gitchangelog.plugin.gradle.GitChangelogTask) {
 gitChangelogPlugin.readableTagName = "(.*)";
 gitChangelogPlugin.dateFormat = "HH:mm:ss";
 gitChangelogPlugin.timeZone = "UTC";
 gitChangelogPlugin.removeIssueFromMessage = false;
 gitChangelogPlugin.ignoreCommitsIfMessageMatches = ".*Gradle.*";
 gitChangelogPlugin.untaggedName = "These commits are not included in any tag";
 gitChangelogPlugin.noIssueName = "These commits have not issue in their commit comment";
 gitChangelogPlugin.filePath = "CHANGELOG_mixed.md";
 gitChangelogPlugin.templateContent = """
# Git Changelog Maven plugin changelog

Changelog of Git Changelog Maven plugin.

{{#tags}}
## {{name}}
 {{#issues}}
### {{name}}
  {{#commits}}
   {{{message}}} *{{commitTime}}*

  {{/commits}}

 {{/issues}}

{{/tags}}
 """;
}


task generateChangelogs << {
}

generateChangelogs.dependsOn {
  tasks.findAll { task -> task.name.startsWith('generateGit') }
}

sourceSets {
 main.java.srcDirs = ['src/main/java']
}
